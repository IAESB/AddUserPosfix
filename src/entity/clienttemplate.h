#ifndef CLIENTTEMPLATE_H
#define CLIENTTEMPLATE_H

#include <iostream>
#include <memory>
#include <vector>

using namespace std;

class ClientTemplate;
typedef shared_ptr<ClientTemplate> ClientTemplatePtr;
typedef vector<ClientTemplatePtr> ClientTemplateList;

class ClientTemplate
{
	long long template_id; //key: PRI
	long long sys_userid;
	long long sys_groupid;
	std::string sys_perm_user;
	std::string sys_perm_group;
	std::string sys_perm_other;
	std::string template_name;
	std::string template_type;
	int limit_maildomain;
	int limit_mailbox;
	int limit_mailalias;
	int limit_mailaliasdomain;
	int limit_mailforward;
	int limit_mailcatchall;
	int limit_mailrouting;
	int limit_mailfilter;
	int limit_fetchmail;
	int limit_mailquota;
	int limit_spamfilter_wblist;
	int limit_spamfilter_user;
	int limit_spamfilter_policy;
	std::string limit_web_ip;
	int limit_web_domain;
	int limit_web_quota;
	std::string web_php_options;
	std::string limit_cgi;
	std::string limit_ssi;
	std::string limit_perl;
	std::string limit_ruby;
	std::string limit_python;
	std::string force_suexec;
	std::string limit_hterror;
	std::string limit_wildcard;
	std::string limit_ssl;
	int limit_web_subdomain;
	int limit_web_aliasdomain;
	int limit_ftp_user;
	int limit_shell_user;
	std::string ssh_chroot;
	int limit_webdav_user;
	std::string limit_backup;
	int limit_aps;
	int limit_dns_zone;
	int limit_dns_slave_zone;
	int limit_dns_record;
	int limit_database;
	int limit_database_quota;
	int limit_cron;
	std::string limit_cron_type;
	int limit_cron_frequency;
	int limit_traffic_quota;
	int limit_client;
	int limit_domainmodule;
	int limit_mailmailinglist;
	int limit_openvz_vm;
	int limit_openvz_vm_template_id;
public:
	ClientTemplate();
	ClientTemplate(long long template_id);
	void init();
	long long getTemplateId() const;
	void setTemplateId(long long value);
	long long getSysUserid() const;
	void setSysUserid(long long value);
	long long getSysGroupid() const;
	void setSysGroupid(long long value);
	std::string getSysPermUser() const;
	void setSysPermUser(std::string value);
	std::string getSysPermGroup() const;
	void setSysPermGroup(std::string value);
	std::string getSysPermOther() const;
	void setSysPermOther(std::string value);
	std::string getTemplateName() const;
	void setTemplateName(std::string value);
	std::string getTemplateType() const;
	void setTemplateType(std::string value);
	int getLimitMaildomain() const;
	void setLimitMaildomain(int value);
	int getLimitMailbox() const;
	void setLimitMailbox(int value);
	int getLimitMailalias() const;
	void setLimitMailalias(int value);
	int getLimitMailaliasdomain() const;
	void setLimitMailaliasdomain(int value);
	int getLimitMailforward() const;
	void setLimitMailforward(int value);
	int getLimitMailcatchall() const;
	void setLimitMailcatchall(int value);
	int getLimitMailrouting() const;
	void setLimitMailrouting(int value);
	int getLimitMailfilter() const;
	void setLimitMailfilter(int value);
	int getLimitFetchmail() const;
	void setLimitFetchmail(int value);
	int getLimitMailquota() const;
	void setLimitMailquota(int value);
	int getLimitSpamfilterWblist() const;
	void setLimitSpamfilterWblist(int value);
	int getLimitSpamfilterUser() const;
	void setLimitSpamfilterUser(int value);
	int getLimitSpamfilterPolicy() const;
	void setLimitSpamfilterPolicy(int value);
	std::string getLimitWebIp() const;
	void setLimitWebIp(std::string value);
	int getLimitWebDomain() const;
	void setLimitWebDomain(int value);
	int getLimitWebQuota() const;
	void setLimitWebQuota(int value);
	std::string getWebPhpOptions() const;
	void setWebPhpOptions(std::string value);
	std::string getLimitCgi() const;
	void setLimitCgi(std::string value);
	std::string getLimitSsi() const;
	void setLimitSsi(std::string value);
	std::string getLimitPerl() const;
	void setLimitPerl(std::string value);
	std::string getLimitRuby() const;
	void setLimitRuby(std::string value);
	std::string getLimitPython() const;
	void setLimitPython(std::string value);
	std::string getForceSuexec() const;
	void setForceSuexec(std::string value);
	std::string getLimitHterror() const;
	void setLimitHterror(std::string value);
	std::string getLimitWildcard() const;
	void setLimitWildcard(std::string value);
	std::string getLimitSsl() const;
	void setLimitSsl(std::string value);
	int getLimitWebSubdomain() const;
	void setLimitWebSubdomain(int value);
	int getLimitWebAliasdomain() const;
	void setLimitWebAliasdomain(int value);
	int getLimitFtpUser() const;
	void setLimitFtpUser(int value);
	int getLimitShellUser() const;
	void setLimitShellUser(int value);
	std::string getSshChroot() const;
	void setSshChroot(std::string value);
	int getLimitWebdavUser() const;
	void setLimitWebdavUser(int value);
	std::string getLimitBackup() const;
	void setLimitBackup(std::string value);
	int getLimitAps() const;
	void setLimitAps(int value);
	int getLimitDnsZone() const;
	void setLimitDnsZone(int value);
	int getLimitDnsSlaveZone() const;
	void setLimitDnsSlaveZone(int value);
	int getLimitDnsRecord() const;
	void setLimitDnsRecord(int value);
	int getLimitDatabase() const;
	void setLimitDatabase(int value);
	int getLimitDatabaseQuota() const;
	void setLimitDatabaseQuota(int value);
	int getLimitCron() const;
	void setLimitCron(int value);
	std::string getLimitCronType() const;
	void setLimitCronType(std::string value);
	int getLimitCronFrequency() const;
	void setLimitCronFrequency(int value);
	int getLimitTrafficQuota() const;
	void setLimitTrafficQuota(int value);
	int getLimitClient() const;
	void setLimitClient(int value);
	int getLimitDomainmodule() const;
	void setLimitDomainmodule(int value);
	int getLimitMailmailinglist() const;
	void setLimitMailmailinglist(int value);
	int getLimitOpenvzVm() const;
	void setLimitOpenvzVm(int value);
	int getLimitOpenvzVmTemplateId() const;
	void setLimitOpenvzVmTemplateId(int value);
};



#endif // CLIENTTEMPLATE_H
